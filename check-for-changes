#!/bin/bash



if [[ -z $1 || -z $2 ]]; then
	echo " usage: ./check \"<url>\" \"<message>\" [interval]"
else 
	clear;


chmod +x .

sleep 0.2

./banner.sh

sleep 0.3


while [ : ]
do
    echo -ne "\n Check for changes" '|\r'
    sleep 0.4
    echo -ne "cHeck for changes" '/\r'
    sleep 0.4
    echo -ne "chEck for changes" '一\r'
    sleep 0.4
    echo -ne "cheCk for changes" '\\ \r'
    sleep 0.4
    echo -ne "checK for changes" '|\r'
    sleep 0.4
    echo -ne "check For changes" '$\r'
    sleep 0.4

    echo -ne "check fOr changes" '|\r'
    sleep 0.3
    echo -ne "cHeck foR changes" '/\r'
    sleep 0.3
    echo -ne "check for Changes" '一\r'
    sleep 0.3
    echo -ne "check for cHanges" '\\ \r'
    sleep 0.3
    echo -ne "check for chAnges" '|\r'
    sleep 0.3
    echo -ne "check For chaNges" '$\r'
    sleep 0.3
    
    echo -ne "check for chanGes" '|\r'
    sleep 0.3
    echo -ne "check for changEs" '/\r'
    sleep 0.3
    echo -ne "check for ChangeS" '一\r'
    sleep 0.3
    break;
done
	

	interval=10
	if [ ! -z $3 ]; then
		interval=$3
	fi
	
	if [ -f previous.html ]; then 
		rm previous.html
	fi

	while :
	do
		current=`curl $1`;

		if [ ! -f previous.html ]; then
			echo -e "\n Writing in previous.html";
       			mkdir -p "`dirname \"previous.html\"`" 2>/dev/null
			echo "$current" >> "previous.html"
		fi

		previous="`cat previous.html`";

		current_count=`echo -e "$current" | wc -l`
		previous_count=`echo -e "$previous" | wc -l`
		
		echo -e "\n$current_count\tvs. $previous_count" ;

		if [ "$previous_count" = "$current_count" ]; then
			echo -e "\n****************************************\n$(date)\nNothing New...\n****************************************\n"
			sleep $interval
			clear;

			./banner.sh
			echo -e "\n"
		else
			echo -e "\n****************************************\n$(date)\nNew Content!\n****************************************\n"
			say $2;
			rm previous.html;
			break;
		fi

	done

fi
